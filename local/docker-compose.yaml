services:
  drupal:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: dev
    container_name: interledger_drupal
    ports:
      - "${DRUPAL_PORT:-8080}:80"
    volumes:
      - ../web:/var/www/html/web:rw
      - ./files:/var/www/html/web/sites/default/files:rw
    depends_on:
      - db
    environment:
      - DRUPAL_DB_HOST=${DRUPAL_DB_HOST:-db}
      - DRUPAL_DB_NAME=${DRUPAL_DB_NAME:-drupal}
      - DRUPAL_DB_USER=${DRUPAL_DB_USER:-drupal}
      - DRUPAL_DB_PASSWORD=${DRUPAL_DB_PASSWORD:-drupal123}
    networks:
      - drupal_network
    restart: unless-stopped

  db:
    image: mysql:8.0
    container_name: interledger_mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-drupal}
      MYSQL_USER: ${MYSQL_USER:-drupal}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-drupal123}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpass123}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./local-backupdb.sql:/docker-entrypoint-initdb.d/01-database.sql:ro
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    networks:
      - drupal_network
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: interledger_phpmyadmin
    environment:
      PMA_HOST: db
      PMA_USER: ${MYSQL_USER:-drupal}
      PMA_PASSWORD: ${MYSQL_PASSWORD:-drupal123}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpass123}
    ports:
      - "${PHPMYADMIN_PORT:-8081}:80"
    depends_on:
      - db
    networks:
      - drupal_network
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  drupal_network:
    driver: bridge